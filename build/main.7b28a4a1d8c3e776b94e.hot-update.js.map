{"version":3,"sources":["webpack:///./module/DataLayer/DataLayer.js","webpack:///webpack/runtime/getFullHash"],"names":["conf","usersEntity","eventsEntity","DataLayer","exsists","instance","resStatus","users","events","init","getData","entity","res","status","Error","json","data","getDataFromJSON","console","log","warn","obj","postData","JSON","stringify","id","push","index","updateData","list","forEach","item","parse"],"mappings":"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","file":"main.7b28a4a1d8c3e776b94e.hot-update.js","sourcesContent":["import { getData, postData, updateData } from './dataUtils';\r\n\r\nconst conf = {\r\n  usersEntity: 'users',\r\n  eventsEntity: 'events',\r\n};\r\n\r\nexport default class DataLayer {\r\n  constructor() {\r\n    if (DataLayer.exsists) {\r\n      return DataLayer.instance;\r\n    }\r\n    DataLayer.instance = this;\r\n    DataLayer.exsists = true;\r\n    this.usersEntity = conf.usersEntity;\r\n    this.eventsEntity = conf.eventsEntity;\r\n    this.resStatus = null;\r\n    this.users = [];\r\n    this.events = [];\r\n\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    this.getData(this.usersEntity);\r\n    this.getData(this.eventsEntity);\r\n  }\r\n\r\n  async getData(entity) {\r\n    try {\r\n      const res = await getData(entity);\r\n      if (res.status !== 200) { throw new Error(`Entity ${entity} not exists`); }\r\n      const data = await res.json();\r\n      getDataFromJSON(data, this[entity]);\r\n      console.log(`${entity}: `, this[entity]);\r\n      console.log('emit ok');\r\n    } catch (err) {\r\n      // exception Decorator\r\n      console.log('emit error');\r\n      console.warn(err);\r\n    }\r\n  }\r\n\r\n  async storeData(entity, obj) {\r\n    try {\r\n      const res = await postData(entity, JSON.stringify(obj));\r\n      if (res.status !== 200) { throw new Error(`Entity ${entity} not exists`); }\r\n      const data = await res.json();\r\n      // eslint-disable-next-line no-param-reassign\r\n      obj.id = data.id;\r\n      this[entity].push(obj);\r\n      console.log(this[entity]);\r\n      console.log('emit render');\r\n    } catch (err) {\r\n      // exception Decorator\r\n      console.log('emit error');\r\n      console.warn(err);\r\n    }\r\n  }\r\n\r\n  async updateData(entity, index) {\r\n    const obj = this[entity][index];\r\n    try {\r\n      const res = await updateData(entity, obj.id, JSON.stringify(obj));\r\n      if (res.status !== 200) { throw new Error(`${obj.id} unreacheble or not exists`); }\r\n      console.log('emit render');\r\n    } catch (err) {\r\n      // exception Decorator\r\n      console.log('emit error');\r\n      console.warn(err);\r\n    }\r\n  }\r\n} // end class DataLayer\r\n\r\nfunction getDataFromJSON(data, list) {\r\n  data.forEach(obj => {\r\n    const item = { id: obj.id, ...JSON.parse(obj.data) };\r\n    list.push(item);\r\n  });\r\n}\r\n\r\n// const data = new DataLayer(conf.url, conf.system, conf.entities);\r\n\r\n// console.log(data);\r\n\r\n// data.getData(conf.entities[0]);\r\n","__webpack_require__.h = function() { return \"3d60480c68728d871b88\"; }"],"sourceRoot":""}