{"version":3,"sources":["webpack:///./module/User/Admin.js","webpack:///webpack/runtime/getFullHash"],"names":["firstFreeSlot","calendar","nextFreeTime","lastBookedDay","workWeek","day","querySelectorAll","id","forEach","elem","dataset","eventId","trim","time","Admin","addEventBtn","querySelector","style","display","addEventListener","e","onClick","updateEvent","target","closest","classes","targetElem","firstFree","modalId","modal","addEvent","events","eventSlot","removeEvent","console","warn","dataTransfer","dragTarget","setData","targetBooked","classList","add","preventDefault","remove","getData","eventIndex","findIndex","event","localStorage","eventStore","JSON","stringify","resetGrid","render","User"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,QAAQ,EAAI;AAChC,MAAIC,YAAY,GAAG,EAAnB;AACA,MAAIC,aAAa,GAAG,EAApB;AACAC,0DAAA,CAAiB,UAAAC,GAAG,EAAI;AACtBJ,YAAQ,CAACK,gBAAT,4BAA6CD,GAAG,CAACE,EAAjD,UACGC,OADH,CACW,UAAAC,IAAI,EAAI;AACf,UAAI,CAACA,IAAI,CAACC,OAAL,CAAaC,OAAd,IAAyBF,IAAI,CAACC,OAAL,CAAaC,OAAb,CAAqBC,IAArB,OAAgC,EAA7D,EAAiE;AAC/D,YAAIT,aAAa,KAAK,EAAlB,IAAwBD,YAAY,KAAK,EAA7C,EAAiD;AAC/CC,uBAAa,GAAGM,IAAI,CAACC,OAAL,CAAaL,GAA7B;AACAH,sBAAY,GAAGO,IAAI,CAACC,OAAL,CAAaG,IAA5B;AACD;AACF;AACF,KARH;AASD,GAVD;AAWA,SAAO;AACLR,OAAG,EAAEF,aADA;AAELU,QAAI,EAAEX;AAFD,GAAP;AAID,CAlBD,C,CAkBG;;;IAEkBY,K;;;;;;;;;;;;;WACnB,gBAAO;AAAA;;AACL;;AACA,WAAKC,WAAL,GAAmB,KAAKd,QAAL,CAAce,aAAd,CAA4B,yBAA5B,CAAnB;AACA,WAAKD,WAAL,CAAiBE,KAAjB,CAAuBC,OAAvB,GAAiC,MAAjC;AACA,WAAKjB,QAAL,CAAckB,gBAAd,CAA+B,OAA/B,EAAwC,UAAAC,CAAC,EAAI;AAC3C,aAAI,CAACC,OAAL,CAAaD,CAAb;AACD,OAFD;AAGA,WAAKE,WAAL;AACD;;;WAED,iBAAQF,CAAR,EAAW;AAAA,UACDG,MADC,GACUH,CADV,CACDG,MADC;;AAGT,UAAIA,MAAM,CAACC,OAAP,YAAmBC,2DAAnB,EAAJ,EAA+C;AAC7C,YAAMC,UAAU,GAAGH,MAAM,CAACC,OAAP,YAAmBC,2DAAnB,EAAnB;AACA,YAAME,SAAS,GAAG3B,aAAa,CAAC,KAAKC,QAAN,CAA/B;AACA,YAAMI,GAAG,GAAGqB,UAAU,CAAChB,OAAX,CAAmBL,GAAnB,GAAyBqB,UAAU,CAAChB,OAAX,CAAmBL,GAA5C,GAAkDsB,SAAS,CAACtB,GAAxE;AACA,YAAMQ,IAAI,GAAGa,UAAU,CAAChB,OAAX,CAAmBG,IAAnB,GAA0Ba,UAAU,CAAChB,OAAX,CAAmBG,IAA7C,GAAoDc,SAAS,CAACd,IAA3E;AACA,YAAMe,OAAO,GAAGF,UAAU,CAAChB,OAAX,CAAmBmB,KAAnC;;AACA,YAAID,OAAJ,EAAa;AAAEE,4DAAQ,CAACF,OAAD,EAAU,KAAKG,MAAf,EAAuB1B,GAAvB,EAA4BQ,IAA5B,CAAR;AAA4C;AAC5D;;AAED,UAAIU,MAAM,CAACC,OAAP,YAAmBC,2DAAnB,EAAJ,EAA+C;AAC7C,YAAMO,SAAS,GAAGT,MAAM,CAACC,OAAP,YAAmBC,0DAAnB,EAAlB;;AACA,YAAIO,SAAJ,EAAe;AACbC,+DAAW,CAAC,cAAD,EAAiBD,SAAjB,EAA4B,KAAKD,MAAjC,CAAX;AACD,SAFD,MAEO;AAAEG,iBAAO,CAACC,IAAR,CAAa,UAAb;AAA2B;AACrC;AACF;;;WAED,uBAAc;AAAA;;AACZ,WAAKlC,QAAL,CAAckB,gBAAd,CAA+B,WAA/B,EAA4C,UAAAC,CAAC,EAAI;AAAA,YACvCG,MADuC,GACdH,CADc,CACvCG,MADuC;AAAA,YAC/Ba,YAD+B,GACdhB,CADc,CAC/BgB,YAD+B;AAE/C,YAAMC,UAAU,GAAGd,MAAM,CAACC,OAAP,YAAmBC,0DAAnB,EAAnB;;AACA,YAAIY,UAAJ,EAAgB;AACdD,sBAAY,CAACE,OAAb,CAAqB,YAArB,EAAmCD,UAAU,CAAC3B,OAAX,CAAmBC,OAAtD;AACD;AACF,OAND;AAQA,WAAKV,QAAL,CAAckB,gBAAd,CAA+B,WAA/B,EAA4C,UAAAC,CAAC,EAAI;AAAA,YACvCG,MADuC,GAC5BH,CAD4B,CACvCG,MADuC;AAE/C,YAAMgB,YAAY,GAAGhB,MAAM,CAACC,OAAP,YAAmBC,0DAAnB,EAArB;;AACA,YAAI,CAACc,YAAD,IAAiBhB,MAAM,CAACC,OAAP,YAAmBC,yDAAnB,EAArB,EAA8D;AAC5DL,WAAC,CAACG,MAAF,CAASiB,SAAT,CAAmBC,GAAnB,CAAuB,YAAvB;AACD;AACF,OAND;AAQA,WAAKxC,QAAL,CAAckB,gBAAd,CAA+B,UAA/B,EAA2C,UAAAC,CAAC,EAAI;AAAA,YACtCG,MADsC,GAC3BH,CAD2B,CACtCG,MADsC;AAE9C,YAAMgB,YAAY,GAAGhB,MAAM,CAACC,OAAP,YAAmBC,0DAAnB,EAArB;;AACA,YAAI,CAACc,YAAD,IAAiBhB,MAAM,CAACC,OAAP,YAAmBC,yDAAnB,EAArB,EAA8D;AAC5DL,WAAC,CAACsB,cAAF;AACD;AACF,OAND;AAQA,WAAKzC,QAAL,CAAckB,gBAAd,CAA+B,WAA/B,EAA4C,UAAAC,CAAC,EAAI;AAC/CA,SAAC,CAACG,MAAF,CAASiB,SAAT,CAAmBG,MAAnB,CAA0B,YAA1B;AACD,OAFD;AAIA,WAAK1C,QAAL,CAAckB,gBAAd,CAA+B,MAA/B,EAAuC,UAAAC,CAAC,EAAI;AAAA,YAClCG,MADkC,GACTH,CADS,CAClCG,MADkC;AAAA,YAC1Ba,YAD0B,GACThB,CADS,CAC1BgB,YAD0B;AAE1C,YAAMG,YAAY,GAAGhB,MAAM,CAACC,OAAP,YAAmBC,0DAAnB,EAArB;;AAEA,YAAI,CAACc,YAAD,IAAiBhB,MAAM,CAACC,OAAP,YAAmBC,yDAAnB,EAArB,EAA8D;AAC5DL,WAAC,CAACsB,cAAF;AACAnB,gBAAM,CAACiB,SAAP,CAAiBG,MAAjB,CAAwB,YAAxB;AACA,cAAMhC,OAAO,GAAGyB,YAAY,CAACQ,OAAb,CAAqB,YAArB,CAAhB;AACAR,sBAAY,CAACE,OAAb,CAAqB,YAArB,EAAmC,EAAnC;;AAEA,cAAMO,UAAU,GAAG,MAAI,CAACd,MAAL,CAAYe,SAAZ,CAAsB,UAAAC,KAAK;AAAA,mBAAIA,KAAK,CAACxC,EAAN,KAAaI,OAAjB;AAAA,WAA3B,CAAnB;;AACA,gBAAI,CAACoB,MAAL,CAAYc,UAAZ,EAAwBhC,IAAxB,GAA+BU,MAAM,CAACb,OAAP,CAAeG,IAA9C;AACA,gBAAI,CAACkB,MAAL,CAAYc,UAAZ,EAAwBxC,GAAxB,GAA8BkB,MAAM,CAACb,OAAP,CAAeL,GAA7C;AAEA2C,sBAAY,CAACC,UAAb,GAA0BC,IAAI,CAACC,SAAL,CAAe,MAAI,CAACpB,MAApB,CAA1B;AACAqB,4DAAS;;AACT,gBAAI,CAACrB,MAAL,CAAYvB,OAAZ,CAAoB6C,2CAApB;AACD;AACF,OAlBD;AAmBD;;;;EA/EgCC,0C;;;;;;;;;;;;WC1BnC,oCAAoC,+BAA+B,E","file":"main.bbd40ba2c3098755e3d4.hot-update.js","sourcesContent":["import addEvent from '../addEvent';\r\nimport { classes, workWeek } from '../auxiliary';\r\nimport removeEvent from '../removeEvent';\r\nimport { render, resetGrid } from '../render';\r\nimport User from './User';\r\n\r\nconst firstFreeSlot = calendar => {\r\n  let nextFreeTime = '';\r\n  let lastBookedDay = '';\r\n  workWeek.forEach(day => {\r\n    calendar.querySelectorAll(`.cell[data-day=\"${day.id}\"]`)\r\n      .forEach(elem => {\r\n        if (!elem.dataset.eventId || elem.dataset.eventId.trim() === '') {\r\n          if (lastBookedDay === '' && nextFreeTime === '') {\r\n            lastBookedDay = elem.dataset.day;\r\n            nextFreeTime = elem.dataset.time;\r\n          }\r\n        }\r\n      });\r\n  });\r\n  return {\r\n    day: lastBookedDay,\r\n    time: nextFreeTime,\r\n  };\r\n}; // end firstFreeSlot\r\n\r\nexport default class Admin extends User {\r\n  init() {\r\n    super.init();\r\n    this.addEventBtn = this.calendar.querySelector('[data-type=\"add-event\"]');\r\n    this.addEventBtn.style.display = 'flex';\r\n    this.calendar.addEventListener('click', e => {\r\n      this.onClick(e);\r\n    });\r\n    this.updateEvent();\r\n  }\r\n\r\n  onClick(e) {\r\n    const { target } = e;\r\n\r\n    if (target.closest(`.${classes.triggerOpen}`)) {\r\n      const targetElem = target.closest(`.${classes.triggerOpen}`);\r\n      const firstFree = firstFreeSlot(this.calendar);\r\n      const day = targetElem.dataset.day ? targetElem.dataset.day : firstFree.day;\r\n      const time = targetElem.dataset.time ? targetElem.dataset.time : firstFree.time;\r\n      const modalId = targetElem.dataset.modal;\r\n      if (modalId) { addEvent(modalId, this.events, day, time); }\r\n    }\r\n\r\n    if (target.closest(`.${classes.removeEvent}`)) {\r\n      const eventSlot = target.closest(`.${classes.slotBooked}`);\r\n      if (eventSlot) {\r\n        removeEvent('event-remove', eventSlot, this.events);\r\n      } else { console.warn('No event'); }\r\n    }\r\n  }\r\n\r\n  updateEvent() {\r\n    this.calendar.addEventListener('dragstart', e => {\r\n      const { target, dataTransfer } = e;\r\n      const dragTarget = target.closest(`.${classes.slotBooked}`);\r\n      if (dragTarget) {\r\n        dataTransfer.setData('text/plain', dragTarget.dataset.eventId);\r\n      }\r\n    });\r\n\r\n    this.calendar.addEventListener('dragenter', e => {\r\n      const { target } = e;\r\n      const targetBooked = target.closest(`.${classes.slotBooked}`);\r\n      if (!targetBooked && target.closest(`.${classes.eventSlot}`)) {\r\n        e.target.classList.add('drag-hover');\r\n      }\r\n    });\r\n\r\n    this.calendar.addEventListener('dragover', e => {\r\n      const { target } = e;\r\n      const targetBooked = target.closest(`.${classes.slotBooked}`);\r\n      if (!targetBooked && target.closest(`.${classes.eventSlot}`)) {\r\n        e.preventDefault();\r\n      }\r\n    });\r\n\r\n    this.calendar.addEventListener('dragleave', e => {\r\n      e.target.classList.remove('drag-hover');\r\n    });\r\n\r\n    this.calendar.addEventListener('drop', e => {\r\n      const { target, dataTransfer } = e;\r\n      const targetBooked = target.closest(`.${classes.slotBooked}`);\r\n\r\n      if (!targetBooked && target.closest(`.${classes.eventSlot}`)) {\r\n        e.preventDefault();\r\n        target.classList.remove('drag-hover');\r\n        const eventId = dataTransfer.getData('text/plain');\r\n        dataTransfer.setData('text/plain', '');\r\n\r\n        const eventIndex = this.events.findIndex(event => event.id === eventId);\r\n        this.events[eventIndex].time = target.dataset.time;\r\n        this.events[eventIndex].day = target.dataset.day;\r\n\r\n        localStorage.eventStore = JSON.stringify(this.events);\r\n        resetGrid();\r\n        this.events.forEach(render);\r\n      }\r\n    });\r\n  }\r\n}\r\n","__webpack_require__.h = function() { return \"2e188ff41978a817fa8f\"; }"],"sourceRoot":""}